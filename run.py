from vkbottle.user import User
import json
import json
import re
from loguru import logger
from loguru import logger as lg
import re, json

with open("config.json", 'r') as tok:
    data = json.load(tok)
    token = data['token']


if len(token) < 85:
    logger.catch()
    lglvl = lg.level("[TokensINFO]", no=38, color="<red>")
    lg.log("[TokensINFO]", "\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω: ")
    token = input("")
    while not (re.sub('[^A-Za-z0-9]', '', token) == token and len(token) == 85):
        lg.log("[TokensINFO]", "\n–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ç–æ–∫–µ–Ω, —É–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω: ")
        token = input("")

    data['token'] = token
    with open("config.json", "w", encoding="utf-8") as token_:
        token_.write(json.dumps(data, indent=4))

user = User(data['token'], mobile=True)


from src.commands import iris,id,signals,time, like, calc,wiki,msgdel,addfriends,commentadd,info,random,online,commands,shubs
import unit

from requests import get as rget
from unit import __version__, __author__, __namelp__
user.set_blueprints(time.bp,unit.bp,like.bp,
calc.user,wiki.bp,msgdel.bp,
addfriends.bp,info.bp,commentadd.bp,
random.bp,online.bp,commands.bp,shubs.bp,signals.bp, id.bp,iris.bp)
user_id = (rget(f'https://api.vk.com/method/users.get?&v=5.52&access_token={token}').json())['response'][0]['id']
async def start():
    from unit import __author__, __version__, __namelp__
    from prefixs import p
    text = f"""
üìò {__namelp__} LP –∑–∞–ø—É—â–µ–Ω.
üìï –í–µ—Ä—Å–∏—è LP: {__version__}
–ü–æ–º–æ—â—å: {p} –ø–æ–º–æ—â—å
    """
    await user.api.messages.send(peer_id=user_id, message=text, random_id=0)
    from loguru import logger as lg
    from prefixs import p
    from prefixs import stickerforstart, error_stickerforstart
    from unit import __version__, __author__


    red = lg.level("[LenderLP]", no=38, color="<yellow>")
    text = f"""
          -----------------
              {__namelp__} LP           
        ‚Üí –ó–∞–ø—É—Å–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:\n
        ‚Üí –í–∞—à –ø—Ä–µ—Ñ–∏–∫—Å –≤ LP: {p}
        ‚Üí –í–∞—à–∏ —ç–º–æ–¥–∑–∏: {stickerforstart}, {error_stickerforstart}
        ‚Üí –í–µ—Ä—Å–∏—è –ª–ø: {__version__}
        ‚ôî –ê–≤—Ç–æ—Ä —é–∑–µ—Ä–±–æ—Ç–∞: {__author__}
        ‚Üí –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞, LP –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É.
          ------------------"""

    lg.log("[LenderLP]", text)
    ellow = lg.level("[LenderL–†]", color="<yellow>", no=40)
    lg.log("[LenderL–†]", "\n–ò–¥—ë—Ç –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞!")



user.run_polling(on_startup=start)

